variables:
  TAG_LATEST: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest
  TAG_COMMIT: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: ""

.base:
    image: docker:stable
    stage: build
    services:
      - docker:dind
    before_script:
      - apk add --no-cache curl jq python3 py3-pip
      - pip3 install awscli
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
    artifacts:
      expire_in: 15 mins
      paths:
        - "docker_image/"

stages:
  - build
  - test
  - push

docker_build:
  stage: build
  extends: .base
  script:
    - mkdir docker_image
    - docker build --cache-from $TAG_LATEST -t $TAG_COMMIT -t $TAG_LATEST .
    - docker save -o docker_image/image_latest.tar $TAG_LATEST
    - docker save -o docker_image/image_commit.tar $TAG_COMMIT
  when: manual
docker_test:
  stage: test
  extends: .base
  artifacts:
    expire_in: 15 mins
    paths:
      - "docker_image/"
  script:
    - docker load -q -i docker_image/image_latest.tar
    - docker run $TAG_LATEST aws --version
    - docker run $TAG_LATEST helm version
    - docker run $TAG_LATEST kubectl version
  when: manual
docker_push:
  stage: push
  extends: .base
  artifacts:
    expire_in: 15 mins
    paths:
      - "docker_image/"
  script:
    - docker load -q -i docker_image/image_latest.tar
    - docker load -q -i docker_image/image_commit.tar
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  when: manual
